version: 2.1

executors:
  python-executor:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo

jobs:
  # Job 1: Instalar dependencias
  install_dependencies:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

  # Job 2: Revisar estilo con Flake8
  lint:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Revisar estilo de código con Flake8
          command: |
            pip install flake8
            flake8 .

  # Job 3: Verificar migraciones
  migrations_check:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Verificar migraciones pendientes
          command: python manage.py makemigrations --check --dry-run

  # Job 4: Desplegar a ambiente de staging (simulado)
  deploy_staging:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Desplegar a staging
          command: echo "Desplegando aplicación a staging..."

  # Job 5: Notificación a Slack
  notify_slack:
    executor: python-executor
    steps:
      - run:
          name: Enviar notificación a Slack
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Pipeline terminado correctamente en CircleCI :white_check_mark:"}' \
            $SLACK_WEBHOOK_URL

workflows:
  # Workflow 1: Validaciones en paralelo
  validate_code:
    jobs:
      - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - migrations_check:
          requires:
            - install_dependencies

  # Workflow 2: Despliegue y notificación
  deploy_and_notify:
    jobs:
      - deploy_staging:
          requires:
            - migrations_check
      - notify_slack:
          requires:
            - deploy_staging
