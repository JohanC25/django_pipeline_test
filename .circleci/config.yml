version: 2.1

parameters:
  python-version:
    type: string
    default: "3.9"

executors:
  python_executor:
    environment:
      python_version: "<< parameters.python-version >>"
    machine:
      image: ubuntu-2004:202101-01  # Entorno Linux compatible con CircleCI

jobs:
  setup:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: Crear y activar entorno virtual
          command: |
            python3 -m venv venv
            . venv/bin/activate
      - run:
          name: Instalar dependencias
          command: |
            . venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt
      - run:
          name: Verificar versiones de Python y Django
          command: |
            . venv/bin/activate && python --version && python -m django --version

  lint:
    executor: python_executor
    parallelism: 2  # Ejecuta en paralelo
    steps:
      - checkout
      - run:
          name: Instalar Flake8
          command: |
            . venv/bin/activate && pip install flake8
      - run:
          name: Ejecutar Flake8 en paralelo
          command: |
            . venv/bin/activate && flake8 . --count --max-line-length=88 --statistics

  migrate:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: Aplicar migraciones
          command: |
            . venv/bin/activate && python manage.py migrate

  check_dependencies:
    executor: python_executor
    steps:
      - checkout
      - run:
          name: Instalar Safety
          command: |
            . venv/bin/activate && pip install safety
      - run:
          name: Verificar vulnerabilidades en dependencias
          command: |
            . venv/bin/activate && safety check --full-report

  notify_success:
    executor: python_executor
    steps:
      - run:
          name: Enviar notificación de éxito a Slack
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Pipeline completado exitosamente :white_check_mark:"}' $SLACK_WEBHOOK_URL

  notify_failure:
    executor: python_executor
    steps:
      - run:
          name: Enviar notificación de fallo a Slack
          command: |
            curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"Pipeline fallido :x:"}' $SLACK_WEBHOOK_URL

workflows:
  version: 2

  setup_workflow:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - notify_success:
          requires:
            - lint
          filters:
            branches:
              only: main

  analysis_workflow:
    jobs:
      - setup
      - migrate:
          requires:
            - setup
      - check_dependencies:
          requires:
            - migrate
      - notify_success:
          requires:
            - check_dependencies
          filters:
            branches:
              only: main
